package org.javid.repository.base;

import lombok.Getter;
import lombok.NonNull;
import lombok.RequiredArgsConstructor;
import org.javid.connection.PostgresConnection;
import org.javid.model.base.BaseEntity;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@RequiredArgsConstructor
public abstract class CrudRepositoryImpl<T extends BaseEntity<ID>, ID> implements CrudRepository<T, ID> {

    private final PostgresConnection postgresConnection;
    @Getter
    private final Map<String, List<T>> cache = new HashMap<>();
    protected static final String ID = "id";

    protected PreparedStatement getPreparedStatement(String sql) throws SQLException {
        return postgresConnection.getConnection().prepareStatement(sql);
    }

    protected PreparedStatement getPreparedStatement(String sql, int autoGeneratedKeys) throws SQLException {
        return postgresConnection.getConnection().prepareStatement(sql, autoGeneratedKeys);
    }

    protected abstract T parseEntity(ResultSet resultSet) throws SQLException;

    protected abstract void mapEntity(@NonNull PreparedStatement statement, @NonNull T entity) throws SQLException;
}
